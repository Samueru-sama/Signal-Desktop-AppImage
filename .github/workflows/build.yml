name: Docker Image CI

on:
  push:
    branches: [ "github_action" ]   # testing
    #branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Compare official Signal-Desktop version to AppImage version
      run: |
        set -e
        LATEST_VERSION_OFFICIAL=$(curl -Ls https://api.github.com/repos/signalapp/Signal-Desktop/releases/latest | jq -r '.tag_name')
        LATEST_VERSION_APPIMAGE=$(curl -Ls https://api.github.com/repos/karo-solutions/Signal-Desktop-AppImage/releases/latest | jq -r '.tag_name')
        # Testing...
        echo "Latest Version: $LATEST_VERSION_APPIMAGE"
        if [[ "$LATEST_VERSION_OFFICIAL" == "$LATEST_VERSION_APPIMAGE" ]]
        then
          echo "Versions are equal. No need to rebuild Signal-Desktop-Appimage. Exiting..."
          exit 0
        fi
        # store new version in GitHub Environment
        echo "LATEST_VERSION=$LATEST_VERSION_OFFICIAL" >> "$GITHUB_ENV"
    - name: Build AppImage
      if: ${{ env.LATEST_VERSION != '' }}   # only run when latest version is set i.e. building a new version is required.
      run: |
        set -e
        echo $LATEST_VERSION
        LATEST_VERSION=$(curl -Ls https://aapi.github.com/repos/signalapp/Signal-Desktop/releases/latest | jq -r '.tag_name')
        echo "Testing error"
    #- name: Build the Docker image
    #  run: docker build --build-arg SIGNAL_BRANCH=v7.29.0 --output out .
    #- name: 'Upload Artifact'
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: Signal-7.29.0.AppImage
    #    path: ./out/Signal-7.29.0.AppImage
    #    retention-days: 5
